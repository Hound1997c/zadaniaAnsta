From 1be3629faf132929eab2753b16a11262969e5045 Mon Sep 17 00:00:00 2001
From: Hound1997c <cyprian.snieg@gmail.com>
Date: Sun, 2 Aug 2020 18:30:33 +0200
Subject: [PATCH] phonebook aplication

---
 .idea/.gitignore                              |   8 ++
 .idea/dataSources.xml                         |  19 +++
 .../inspectionProfiles/profiles_settings.xml  |   6 +
 .idea/misc.xml                                |   7 +
 .idea/modules.xml                             |   8 ++
 .idea/phoneBook.iml                           |  28 ++++
 .idea/vcs.xml                                 |   6 +
 __pycache__/manage.cpython-38.pyc             | Bin 0 -> 798 bytes
 db.sqlite3                                    | Bin 0 -> 139264 bytes
 initial_data.json                             |  21 +++
 manage.py                                     |  21 +++
 phoneBook/__init__.py                         |   0
 phoneBook/__pycache__/__init__.cpython-38.pyc | Bin 0 -> 149 bytes
 phoneBook/__pycache__/settings.cpython-38.pyc | Bin 0 -> 2363 bytes
 phoneBook/__pycache__/urls.cpython-38.pyc     | Bin 0 -> 985 bytes
 phoneBook/__pycache__/wsgi.cpython-38.pyc     | Bin 0 -> 556 bytes
 phoneBook/asgi.py                             |  16 +++
 phoneBook/settings.py                         | 125 +++++++++++++++++
 phoneBook/urls.py                             |  25 ++++
 phoneBook/wsgi.py                             |  16 +++
 polls/__init__.py                             |   0
 polls/__pycache__/__init__.cpython-38.pyc     | Bin 0 -> 145 bytes
 polls/__pycache__/apps.cpython-38.pyc         | Bin 0 -> 363 bytes
 polls/__pycache__/models.cpython-38.pyc       | Bin 0 -> 899 bytes
 polls/__pycache__/urls.cpython-38.pyc         | Bin 0 -> 714 bytes
 polls/__pycache__/views.cpython-38.pyc        | Bin 0 -> 3297 bytes
 polls/admin.py                                |   3 +
 polls/apps.py                                 |   5 +
 polls/migrations/0001_initial.py              |  39 ++++++
 polls/migrations/__init__.py                  |   0
 .../__pycache__/0001_initial.cpython-38.pyc   | Bin 0 -> 1026 bytes
 .../__pycache__/__init__.cpython-38.pyc       | Bin 0 -> 156 bytes
 polls/models.py                               |  22 +++
 polls/static/polls/style.css                  |  19 +++
 polls/tables.py                               |   8 ++
 polls/tests.py                                |   3 +
 polls/urls.py                                 |  19 +++
 polls/views.py                                | 121 +++++++++++++++++
 templates/polls/index.html                    | 126 ++++++++++++++++++
 39 files changed, 671 insertions(+)
 create mode 100644 .idea/.gitignore
 create mode 100644 .idea/dataSources.xml
 create mode 100644 .idea/inspectionProfiles/profiles_settings.xml
 create mode 100644 .idea/misc.xml
 create mode 100644 .idea/modules.xml
 create mode 100644 .idea/phoneBook.iml
 create mode 100644 .idea/vcs.xml
 create mode 100644 __pycache__/manage.cpython-38.pyc
 create mode 100644 db.sqlite3
 create mode 100644 initial_data.json
 create mode 100644 manage.py
 create mode 100644 phoneBook/__init__.py
 create mode 100644 phoneBook/__pycache__/__init__.cpython-38.pyc
 create mode 100644 phoneBook/__pycache__/settings.cpython-38.pyc
 create mode 100644 phoneBook/__pycache__/urls.cpython-38.pyc
 create mode 100644 phoneBook/__pycache__/wsgi.cpython-38.pyc
 create mode 100644 phoneBook/asgi.py
 create mode 100644 phoneBook/settings.py
 create mode 100644 phoneBook/urls.py
 create mode 100644 phoneBook/wsgi.py
 create mode 100644 polls/__init__.py
 create mode 100644 polls/__pycache__/__init__.cpython-38.pyc
 create mode 100644 polls/__pycache__/apps.cpython-38.pyc
 create mode 100644 polls/__pycache__/models.cpython-38.pyc
 create mode 100644 polls/__pycache__/urls.cpython-38.pyc
 create mode 100644 polls/__pycache__/views.cpython-38.pyc
 create mode 100644 polls/admin.py
 create mode 100644 polls/apps.py
 create mode 100644 polls/migrations/0001_initial.py
 create mode 100644 polls/migrations/__init__.py
 create mode 100644 polls/migrations/__pycache__/0001_initial.cpython-38.pyc
 create mode 100644 polls/migrations/__pycache__/__init__.cpython-38.pyc
 create mode 100644 polls/models.py
 create mode 100644 polls/static/polls/style.css
 create mode 100644 polls/tables.py
 create mode 100644 polls/tests.py
 create mode 100644 polls/urls.py
 create mode 100644 polls/views.py
 create mode 100644 templates/polls/index.html

diff --git a/.idea/.gitignore b/.idea/.gitignore
new file mode 100644
index 0000000..73f69e0
--- /dev/null
+++ b/.idea/.gitignore
@@ -0,0 +1,8 @@
+# Default ignored files
+/shelf/
+/workspace.xml
+# Datasource local storage ignored files
+/dataSources/
+/dataSources.local.xml
+# Editor-based HTTP Client requests
+/httpRequests/
diff --git a/.idea/dataSources.xml b/.idea/dataSources.xml
new file mode 100644
index 0000000..3e813e3
--- /dev/null
+++ b/.idea/dataSources.xml
@@ -0,0 +1,19 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="DataSourceManagerImpl" format="xml" multifile-model="true">
+    <data-source source="LOCAL" name="db" uuid="c882b613-3b16-47ea-89a1-b5a649a15554">
+      <driver-ref>sqlite.xerial</driver-ref>
+      <synchronize>true</synchronize>
+      <jdbc-driver>org.sqlite.JDBC</jdbc-driver>
+      <jdbc-url>jdbc:sqlite:D:\Studbaza\pythonProjects\phoneBook\db.sqlite3</jdbc-url>
+    </data-source>
+    <data-source source="LOCAL" name="Django default" uuid="ab828815-7de9-428e-9fdf-1141f9e17bff">
+      <driver-ref>sqlite.xerial</driver-ref>
+      <synchronize>true</synchronize>
+      <imported>true</imported>
+      <remarks>$PROJECT_DIR$/phoneBook/settings.py</remarks>
+      <jdbc-driver>org.sqlite.JDBC</jdbc-driver>
+      <jdbc-url>jdbc:sqlite:D:\Studbaza\pythonProjects\phoneBook\db.sqlite3</jdbc-url>
+    </data-source>
+  </component>
+</project>
\ No newline at end of file
diff --git a/.idea/inspectionProfiles/profiles_settings.xml b/.idea/inspectionProfiles/profiles_settings.xml
new file mode 100644
index 0000000..105ce2d
--- /dev/null
+++ b/.idea/inspectionProfiles/profiles_settings.xml
@@ -0,0 +1,6 @@
+<component name="InspectionProjectProfileManager">
+  <settings>
+    <option name="USE_PROJECT_PROFILE" value="false" />
+    <version value="1.0" />
+  </settings>
+</component>
\ No newline at end of file
diff --git a/.idea/misc.xml b/.idea/misc.xml
new file mode 100644
index 0000000..d2c7008
--- /dev/null
+++ b/.idea/misc.xml
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="JavaScriptSettings">
+    <option name="languageLevel" value="ES6" />
+  </component>
+  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.8 (venv)" project-jdk-type="Python SDK" />
+</project>
\ No newline at end of file
diff --git a/.idea/modules.xml b/.idea/modules.xml
new file mode 100644
index 0000000..33fb648
--- /dev/null
+++ b/.idea/modules.xml
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/phoneBook.iml" filepath="$PROJECT_DIR$/.idea/phoneBook.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
diff --git a/.idea/phoneBook.iml b/.idea/phoneBook.iml
new file mode 100644
index 0000000..0c3afa1
--- /dev/null
+++ b/.idea/phoneBook.iml
@@ -0,0 +1,28 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="PYTHON_MODULE" version="4">
+  <component name="FacetManager">
+    <facet type="django" name="Django">
+      <configuration>
+        <option name="rootFolder" value="$MODULE_DIR$" />
+        <option name="settingsModule" value="phoneBook/settings.py" />
+        <option name="manageScript" value="$MODULE_DIR$/manage.py" />
+        <option name="environment" value="&lt;map/&gt;" />
+        <option name="doNotUseTestRunner" value="false" />
+        <option name="trackFilePattern" value="migrations" />
+      </configuration>
+    </facet>
+  </component>
+  <component name="NewModuleRootManager">
+    <content url="file://$MODULE_DIR$" />
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+  <component name="TemplatesService">
+    <option name="TEMPLATE_CONFIGURATION" value="Django" />
+    <option name="TEMPLATE_FOLDERS">
+      <list>
+        <option value="$MODULE_DIR$/../phoneBook\templates" />
+      </list>
+    </option>
+  </component>
+</module>
\ No newline at end of file
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
index 0000000..94a25f7
--- /dev/null
+++ b/.idea/vcs.xml
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
diff --git a/__pycache__/manage.cpython-38.pyc b/__pycache__/manage.cpython-38.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..08aad3d3376115df19736f790c3c6c13e49ab660
GIT binary patch
literal 798
zcmYjPO>Yx15VgIVCKOUtsH%j-!M7?1wkL#y5T!IxKLkmoq-q->S?<~mPIm3c_C`(A
za-f{}4IF?Qe`&9r_zMUL#%YT>E6?tF-psst_CdYAh`^4&KV+W?LO;XLZG%1Z3YJU2
z3Didd3zFeJp1(<-h)BerP(PBfsEmkxB%@1&ksw{vSeQL)4!ItfHAhpE=Uj^?nbMLL
zUS-Np>8Y`li(F~tyyad^B=y{lT=EN=p>`VljRhis>J}{52j|fce<gv&H-gb@IS|RB
zJidVThe$t;k*|yv?H)!K7~)I5A}W{o9DgK-=qZeHfj{6Qbc{4PLg&aY46B!b6DSaG
zm#fXa&GvSObz8mOZhO1S-gcS?Z(6ha<M&3(*T#$zC%spC;4B6<4O~8uXEH6kWT)2T
z?0R4p2A+M{GDRlznx`rs8|&$nE(zVVl1@!QT>&4;gHTF4&$CPl3UX0C;VR=NnWRPs
zpr!lAy`4^bf3vqkrJg8jbS|~06K++&ZP2C?^O7L$Kziy8<ta$Zy`-E%f-iV>J9VQ`
zD~WMs^}1ZS2!jcE%8SgGt73kDNouT2-~jnRhITfBk;}Wg^I=-n8e2wg>dKhg!K6X1
z!jU{ne;|7gpudym^YyMT#0j7A_3_k$i2K$IW$NAfe?{M2HAu$OGS0cuRmgNJ;1FKI
z1TVuwF!@Vj@@J)DmteoFF&2=FH7aG5F=0~1Yzz^5C%7Ao=DCDGpmNLA=M`S$MiiNR
S87`O$H!Q|AT#IV;8vY0Ot=w$@

literal 0
HcmV?d00001

diff --git a/db.sqlite3 b/db.sqlite3
new file mode 100644
index 0000000000000000000000000000000000000000..9f72136e2cd658a87248f066612603e8de1596eb
GIT binary patch
literal 139264
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

literal 0
HcmV?d00001

diff --git a/initial_data.json b/initial_data.json
new file mode 100644
index 0000000..e219656
--- /dev/null
+++ b/initial_data.json
@@ -0,0 +1,21 @@
+[ { "model": "polls.Osoba", "fields": { "imie": "John", "nazwisko": "Lennon" } },
+  { "model": "polls.Osoba", "fields": { "imie": "John", "nazwisko": "Wick" } },
+  { "model": "polls.Osoba", "fields": { "imie": "Alan", "nazwisko": "Turing" } },
+  { "model": "polls.Osoba", "fields": { "imie": "Harry", "nazwisko": "Potter" } },
+  { "model": "polls.Osoba", "fields": { "imie": "Sandor", "nazwisko": "Clegane" } },
+  { "model": "polls.Osoba", "fields": { "imie": "Adrian", "nazwisko": "von Ziegler" } },
+  { "model": "polls.Osoba", "fields": { "imie": "John", "nazwisko": "Turing" } },
+  { "model": "polls.Osoba", "fields": { "imie": "Ozzy", "nazwisko": "Osbourne" } },
+  { "model": "polls.Osoba", "fields": { "imie": "Katniss", "nazwisko": "Everdeen" } },
+  { "model": "polls.Osoba", "fields": { "imie": "Till", "nazwisko": "Lindemann" } },
+  { "model": "polls.Osoba", "fields": { "imie": "Anakin", "nazwisko": "Skywalker" } },
+  { "model": "polls.Osoba", "fields": { "imie": "Varg", "nazwisko": "Vikerness" } },
+  { "model": "polls.Osoba", "fields": { "imie": "John", "nazwisko": "Flanagan" } },
+  { "model": "polls.Osoba", "fields": { "imie": "ObiWan", "nazwisko": "Kenobi" } },
+  { "model": "polls.Osoba", "fields": { "imie": "Ezio", "nazwisko": "Auditore" } },
+  { "model": "polls.Osoba", "fields": { "imie": "Cirilla", "nazwisko": "Riannon" } },
+  { "model": "polls.Osoba", "fields": { "imie": "Leo", "nazwisko": "Bonhart" } },
+  { "model": "polls.Osoba", "fields": { "imie": "Holden", "nazwisko": "Caulfield" } },
+  { "model": "polls.Osoba", "fields": { "imie": "Tarja", "nazwisko": "Turunen" } },
+  { "model": "polls.Osoba", "fields": { "imie": "Tony", "nazwisko": "Stark" } }
+]
\ No newline at end of file
diff --git a/manage.py b/manage.py
new file mode 100644
index 0000000..64fd04f
--- /dev/null
+++ b/manage.py
@@ -0,0 +1,21 @@
+#!/usr/bin/env python
+"""Django's command-line utility for administrative tasks."""
+import os
+import sys
+
+
+def main():
+    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'phoneBook.settings')
+    try:
+        from django.core.management import execute_from_command_line
+    except ImportError as exc:
+        raise ImportError(
+            "Couldn't import Django. Are you sure it's installed and "
+            "available on your PYTHONPATH environment variable? Did you "
+            "forget to activate a virtual environment?"
+        ) from exc
+    execute_from_command_line(sys.argv)
+
+
+if __name__ == '__main__':
+    main()
diff --git a/phoneBook/__init__.py b/phoneBook/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/phoneBook/__pycache__/__init__.cpython-38.pyc b/phoneBook/__pycache__/__init__.cpython-38.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..2e2dd0bdcd6f08e4d4dd39cf94d4778841464434
GIT binary patch
literal 149
zcmWIL<>g`kg2+WO@gVv!h(HF6K#l_t7qb9~6oz01O-8?!3`HPe1o6wt#VRJaq%<Wd
zu_`g9pt2+*KQEvtKPxr4q&TJk$Vqj|&(B6;#m8snWtPOp>lIYq;;_lhPbtkwwF8;?
H8HgDG{H!C(

literal 0
HcmV?d00001

diff --git a/phoneBook/__pycache__/settings.cpython-38.pyc b/phoneBook/__pycache__/settings.cpython-38.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..18e149c4e2c57d367caf58b960eac2ff91a1fc7b
GIT binary patch
literal 2363
zcmb7FTXWM!6t)$`c8nb^;SQyuTn&v3g#yF0w2G|+55A2h6RKgVk-ckqgKp8TFwt+}
zp*;2{^r`<tuYKxcUpiCTDLs-eaUEuwO4jkwx$oKUth&WwJ_XlLKVQ;+E2L7t#4qz#
z4qm>6hekk9N=u<M;;gim#_1jIhow2n<K=hh_|`ILNy{Q$%b6){1udft%Ay=vL3uNy
z<<SvTKt;5Qj-q4exS7?Cpc7gFttF9)ID<~U<IFVT(J6Eqok3^OIg=-8bp9=GrnOac
zK|6{rqEBYlm)>#c)3+Q+YsZj)E`z0jK1=A8gkB|Slh=-;YuX8PU0Z{yPQr5vp3~@t
zb_U(l&LU1pl}d(~PNnkI9m6qQfnvspV^U$@`hquf9lYVXuLRF`cW|GH`TQ1kux~Jo
zgx;QT10`PT2C|7GP-ggSVtGRdD8vyaVeg4|#7E%02~lm=#{zL6fo(A2Is*LIkU&ae
z;m@H0oF6jg(Z}U7a{E*q=a^Q|ckMEE$`G*3T#xi=d0KLL9G(raFbFJ5un1*>JJ?^6
z;UGwai7&i1tN_#hlgr10xkSGLBvQ@ri&5zJ%v<j5(Jo;R>{0*q;O^HB`u_g<wOd!c
z>pSe>W!n4lij8+4`Mo>z%}q2=!?p2x#J=k=pY%i{V8igjf-qKMhp{~m)9}oKl444s
zZwD1NC=3%k&M$f}=yX5sFAYz7u4Pft@H{HEW47Wt17e2j6Cax(WZ{wFW0B&1;1jkd
zDifwL(}njJQ%s5y=lqqiY|g86FbQm^?K)y5`TGx3>JP*Ukmm%C=1d<h)DpLJz77fA
zp_`<i;BC%vaS_u7&O0~8O`Y?4@R3DWr2lHi=)VHYi!U~P!^SNy1~;AaTb<3582A<q
z%ab?^+nxm@CH5cycF+{^Vl|mAb)u%x%G8o-ClZ9bVLHr3A1ZWx8s1!tchE*exEGk=
ztwUJ)co$}bg|{cRaj+>~6Y%1HWgp}C-h%P0p&uz_sw?qPc0;N>lbcnIuhu$Bl#|+R
zJ>jygwpwd7mGJz2??%)lF?^xr$$myzga<}ou^H@9Z@-mv*CGtx3-chH@FgzF$jz-<
zQ;zti)R6u7s1Khml%9adGbkOoKGNaDASg*Eb}9BH7WX1xSRppCjCe?%k1bq3d~(=G
z4dM_xu<O_{*>K<go5T8#XQn-=aX-MfhYipSZ0wW%!3fLPSr4eT)Kx2Ct_%k|3{Sa~
z4o{Y6`%oT`H!ScmEtk$kSzU*-TGu1ar4jELYzVtTd<W(r${IbINOHO!A3?gV<u)Wm
zj(0f9D{`eHtNJtfyJ)#8Z*;e!qExT9w&kk+w56y@v|4K_Du_S;uu!6WqgJif<!z}W
zM}<zSrRv>Iz0zuKM*NOToM=Ur8|}KJ%1U%>TiL3`UiDf<ig6UJR3%l4lPl3#sjEKK
z+mfPew>nk*xm2%#vIX!f)}`iFSK5;GN~<bEz*<ArwHCl7*M+iccONy!T>b8yW|WC#
zss<}jAx9;yCMs;!UZ~wpvP9*_lz$ljmXP<4tB+qQEI>UYG+ugp48E}K@wb(}oV9k2
zn||CxZ!gMyWxFV_@Duo6r|4@Sd?B}VG0QLU9G~IRv->@tpYgHu4?fTHTzZv*Yijiu
i_ksJ9|G*#Tv$3r3H}FL+1ycS1{heQf4C6b)bN>L~_aPww

literal 0
HcmV?d00001

diff --git a/phoneBook/__pycache__/urls.cpython-38.pyc b/phoneBook/__pycache__/urls.cpython-38.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..2f612df1c0fbb306caaf1258c7d3ba61666a841a
GIT binary patch
literal 985
zcma)5-EPw`6n4^NE!l?p2KX+GR1$t9E~<fmjfqJJA;xZ^ip-7OCL^{Z+X1@UJ_1j{
zE9I6eUSSsq+f5-tLYk#m_Q~;gzVn@PE)EX^px5T)UiNJOzz=ijFHc{d>ra{ugA`x~
zyOl%T)OE~xPz|V;del#Sd-tk6I!uQSAU^hqhxazl#$7q-2oKLeG(y4!pe{HgFFF4N
zFW$d_$DA$8RU?opISYah1%a21sA{AX5lmjfs+0-}-Y6o?0|^y}pG)#Z#_*I2NVy=e
zWJ@lng@AQMkR(tNG7F$yg;KSgB?;!ajPVs>D_#qJMRFDAoF;@NkK+f4;&qwJ#5gB9
zyi9^uUlG+<au%F6EH~`7VJ+yx7{0(5A_hxZbD?GsE(NEMt}|5Eow4WtsPnfe>jZik
z>Zdx{ViJbaF0X=9GKCCL@-#H(Fba+<B<1~uP7L=@|Hp!>f(Sz-wnFXbyw+Hj{VmxT
z{}{>4fJ~x)7@e`aYH-O`S_B)<q?YSq?({jc!az+$m&f>$Nd%Xjl(Vf|+j7K4@Eys{
zcWOnsHQPnSSBVyI7b!FbiyKB!@KZN0h@93lLPu^p?A+Rcj;!rI!n9;J&d2MZ=2a!_
z!?)3$c9><lZL+N0?=dw!4AOCDF)3Srq2~t(Gcf7hzyFjd7sA)ZcE4Bi??9Njv)j#+
zliB=SHF$xp(Y#(OJs$724Jzk<W~FyBYQ^=s9UW1Qn~FShG?X-W-uS>BI|tsuuitHt
BFgO4J

literal 0
HcmV?d00001

diff --git a/phoneBook/__pycache__/wsgi.cpython-38.pyc b/phoneBook/__pycache__/wsgi.cpython-38.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..ca7409653dd702923a0f91b855e28263df831cb6
GIT binary patch
literal 556
zcmYjPL5mYH6wajGZ5>?^5l<d+E$GaG;9-$PrE95ZSD0PIQkZ5ZuhY~_UYMj^+p9mr
zi+b}XnX4!Nf+sUAE`5-fygc6fzV{`UM@KOU_VLG~{A)zW?<Ux{b_iaCWsidsWK2XP
zsEWo>*jtKLt#K<N5G~r@4n$iVe5WC5eIesRK{L`j-293^WP>3qP|sw^W>_;bM-8tK
zKQU9|0t%PJ@z62&Y|w&bZVqf$!j<Az3K+MHvkJvh!4m~5P;A9(xlL(afnd`qH%7^V
zJBfNa4gFpRoC<4TQU}Otn_#Fzb7|R3DtOE+Ks<NO*poCBSlC1?xGwQOrvj@Kbow+o
zPUm>-Fcn}Ft}D<ky|$%H<3B+VGU`SCK?yEz?(#hv{$c;k%hBLG&(1C`hND52zdP?=
zzCGLAznMR=;GEQ@?R9)7&jX1(_Y|$ax1*92VS=P-T+;yMJD^vxM(yKJC}75y%K6)S
zm_JF~Jm%K@ebzsjWNs<0_=Zo++6C3$@AS5l8wz`;1}8CV-+jK5`ZW9oV!Oe$Z*}P%
HdYAqKybG>g

literal 0
HcmV?d00001

diff --git a/phoneBook/asgi.py b/phoneBook/asgi.py
new file mode 100644
index 0000000..20ce9f0
--- /dev/null
+++ b/phoneBook/asgi.py
@@ -0,0 +1,16 @@
+"""
+ASGI config for phoneBook project.
+
+It exposes the ASGI callable as a module-level variable named ``application``.
+
+For more information on this file, see
+https://docs.djangoproject.com/en/3.0/howto/deployment/asgi/
+"""
+
+import os
+
+from django.core.asgi import get_asgi_application
+
+os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'phoneBook.settings')
+
+application = get_asgi_application()
diff --git a/phoneBook/settings.py b/phoneBook/settings.py
new file mode 100644
index 0000000..0b73595
--- /dev/null
+++ b/phoneBook/settings.py
@@ -0,0 +1,125 @@
+"""
+Django settings for phoneBook project.
+
+Generated by 'django-admin startproject' using Django 3.0.8.
+
+For more information on this file, see
+https://docs.djangoproject.com/en/3.0/topics/settings/
+
+For the full list of settings and their values, see
+https://docs.djangoproject.com/en/3.0/ref/settings/
+"""
+
+import os
+
+# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
+BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
+
+
+# Quick-start development settings - unsuitable for production
+# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/
+
+# SECURITY WARNING: keep the secret key used in production secret!
+SECRET_KEY = 'wzrbg*o+wqit6mwcvf1=nd^4-%*$p&jt7!sb5#meq8rb0sx(df'
+
+# SECURITY WARNING: don't run with debug turned on in production!
+DEBUG = True
+
+ALLOWED_HOSTS = []
+
+
+# Application definition
+
+INSTALLED_APPS = [
+    'django.contrib.auth',
+    'django.contrib.contenttypes',
+    'django.contrib.sessions',
+    'django.contrib.messages',
+    'django.contrib.staticfiles',
+    'polls.apps.PollsConfig',
+]
+
+MIDDLEWARE = [
+    'django.middleware.security.SecurityMiddleware',
+    'django.contrib.sessions.middleware.SessionMiddleware',
+    'django.middleware.common.CommonMiddleware',
+    'django.middleware.csrf.CsrfViewMiddleware',
+    'django.contrib.auth.middleware.AuthenticationMiddleware',
+    'django.contrib.messages.middleware.MessageMiddleware',
+    'django.middleware.clickjacking.XFrameOptionsMiddleware',
+]
+
+ROOT_URLCONF = 'phoneBook.urls'
+
+TEMPLATES = [
+    {
+        'BACKEND': 'django.template.backends.django.DjangoTemplates',
+        'DIRS': [os.path.join(BASE_DIR, 'templates')]
+        ,
+        'APP_DIRS': True,
+        'OPTIONS': {
+            'context_processors': [
+                'django.template.context_processors.debug',
+                'django.template.context_processors.request',
+                'django.contrib.auth.context_processors.auth',
+                'django.contrib.messages.context_processors.messages',
+            ],
+        },
+    },
+]
+
+WSGI_APPLICATION = 'phoneBook.wsgi.application'
+
+
+# Database
+# https://docs.djangoproject.com/en/3.0/ref/settings/#databases
+
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
+    }
+}
+
+
+# Password validation
+# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators
+
+AUTH_PASSWORD_VALIDATORS = [
+    {
+        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
+    },
+    {
+        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
+    },
+    {
+        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
+    },
+    {
+        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
+    },
+]
+
+
+# Internationalization
+# https://docs.djangoproject.com/en/3.0/topics/i18n/
+
+LANGUAGE_CODE = 'en-us'
+
+TIME_ZONE = 'UTC'
+
+USE_I18N = True
+
+USE_L10N = True
+
+USE_TZ = True
+
+
+# Static files (CSS, JavaScript, Images)
+# https://docs.djangoproject.com/en/3.0/howto/static-files/
+
+STATIC_URL = '/static/'
+
+FIXTURE_DIRS = (
+   '/phoneBook/fixtures/',
+)
\ No newline at end of file
diff --git a/phoneBook/urls.py b/phoneBook/urls.py
new file mode 100644
index 0000000..4c49cff
--- /dev/null
+++ b/phoneBook/urls.py
@@ -0,0 +1,25 @@
+"""phoneBook URL Configuration
+
+The `urlpatterns` list routes URLs to views. For more information please see:
+    https://docs.djangoproject.com/en/3.0/topics/http/urls/
+Examples:
+Function views
+    1. Add an import:  from my_app import views
+    2. Add a URL to urlpatterns:  path('', views.home, name='home')
+Class-based views
+    1. Add an import:  from other_app.views import Home
+    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')
+Including another URLconf
+    1. Import the include() function: from django.urls import include, path
+    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))
+"""
+# from django.contrib import admin
+from django.urls import path
+
+from django.conf.urls import include, url
+from django.contrib import admin
+
+urlpatterns = [
+    #    path('admin/', admin.site.urls),
+     url(r'^', include('polls.urls')), #this line added
+]
diff --git a/phoneBook/wsgi.py b/phoneBook/wsgi.py
new file mode 100644
index 0000000..ec712e8
--- /dev/null
+++ b/phoneBook/wsgi.py
@@ -0,0 +1,16 @@
+"""
+WSGI config for phoneBook project.
+
+It exposes the WSGI callable as a module-level variable named ``application``.
+
+For more information on this file, see
+https://docs.djangoproject.com/en/3.0/howto/deployment/wsgi/
+"""
+
+import os
+
+from django.core.wsgi import get_wsgi_application
+
+os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'phoneBook.settings')
+
+application = get_wsgi_application()
diff --git a/polls/__init__.py b/polls/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/polls/__pycache__/__init__.cpython-38.pyc b/polls/__pycache__/__init__.cpython-38.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..5c65813cf9c0304e2d352ff619c8fe7bfc161125
GIT binary patch
literal 145
zcmWIL<>g`kg2+WO@gVv!h(HF6K#l_t7qb9~6oz01O-8?!3`HPe1o6wv#VRJaq%<Wd
zu_`g9pt2+*KQEvtKPxr4q&TJk$Vqj|&(Dr2$j`|sj){-Y%*!l^kJl@xyv1RYo1ape
NlWGSt?=uiH003tKB1`}P

literal 0
HcmV?d00001

diff --git a/polls/__pycache__/apps.cpython-38.pyc b/polls/__pycache__/apps.cpython-38.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..7df84d79d1f1fe0b8eee1dd87308d5d321f48b74
GIT binary patch
literal 363
zcmYjMy-ve05I)DLl$KWF0T@`bbm)i>DnAliRjFdYie$MxQz%Ys;$$c*JP8}G<dun6
zVB(x0(Ub1G`~2OX?<SKGkllZrNI~%{l0!?0%*p*J0Rl1uB@>LnEntHD9gu7G#zlhZ
z3i81>RYA_e@Y1<!TRl8&H}U1r7?C--KPJ#17y@-O!7-r;JRB{pF}`mW0~g66PeUeU
zrAjSj7)e=LY)#C^Qogjx{3&USpHOEsxr3kC%~`Q(T3oAFRk(fgXscyycY4$K!V%F|
z);<^Al0rG>r*2<!>W<&`2|>m>zKDn6PE}hwjdgX@I^};^pAAU}*?E8AMf_|xXUu;A
DpHotS

literal 0
HcmV?d00001

diff --git a/polls/__pycache__/models.cpython-38.pyc b/polls/__pycache__/models.cpython-38.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..8126ae02e2ae63ffae8ca8f1892ba8cddcce77ee
GIT binary patch
literal 899
zcmaJ<!H&}~5VeyyaYBnk;R84zq$0Ej!~r3Mx^%Z35Cy4li7Hv{+O+99adA???iH?l
z0umhiOTKd2U*G~WO(lxh#gd<9p2uUqXTR-sGXmr5qub(sK*$eF_D2NC0A@V`P()Ef
zN}5wjo)Z<Q@H0`Nrpw?{n1{ebiUGrROax4<5@3=Y!xW#8etH4DNT2$+v`U-$1k?Qy
zLNb6^-vQ7hr;6l(4wsRlD)>Tkwim}LgqD$KuWCD!7Y|^^hWf0OABEA?yjhI<iRVI8
zveZKOOb9r1Z7}W#@qR5$yW&7S@#%0O-Kfw;<xx=<I_H%<|4`JYc0=4XsMx~Khewa6
zlV+`E@?1_=XU)P^ubo}$lct`oAkojPJ)N$sG4-_7c(6KiD2u_Y(Ns=5!It?)J(dix
z>>j|rdd(CC<uP~=<_Sbxg(?C+QpLc7*e7qa(eG?E+610!RWx#Dv`=j%z-HZOhX*_C
zKkjEP!Gt5E2wVNx$U0rjs~5Vxu1|)Cli}gfv1b<jb@*HIq-oFj<47BIuum5NovN`l
zr<_K=;&97et@JLG{!i&Q{+)oz-Af;rvM?ie9X4H|!`*<jt-G#=(M<rKwfpdKJ=56Z
z()-_nTHN&a{gEAm#i?4#YHknItTl|i#4p?)g~}ZkUe?$1C+)|3O0jti(206+FZm74
C$G58h

literal 0
HcmV?d00001

diff --git a/polls/__pycache__/urls.cpython-38.pyc b/polls/__pycache__/urls.cpython-38.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..0a65e46c0e71eab13d1102056a22ef540fba3eb9
GIT binary patch
literal 714
zcmZ{i&2H2%5XbE#`<ag}WjP`tu?Hfgt;7*krQ+j?RuniyQC4ZjU9xrJ$nnxP@4$t(
z;D~q|Upe&=;D8wKx}qTAD1Z5v|70{C&$}=j6I|bZJzRcu3Hff|_VN*q@ohh&00GKL
zMH5QR-r-K=CT`^=9<mD_?^XSzPYI*YWBv62`Y`z9A`Ov-FtRj88i8*qKpI16DMIpL
z&(Z`bfIF7<kwUm@Xf;S8n4XaM-Zj=mVyfMZ<gufJHw;S23iZBZ7dm*$s)px^8M>ys
z$lgbUwsW$X?v*vLOZ?lb^NMx%Ghm!4wk$-g@<JUvdbT)h&W}=f93RYdxN~3Z%+Akh
zc40w}|LieM4zOfZUh-`Q(TdZ2Y4gnV5ZzbCw1LeBQM3OAE{xed$naF^ud@D0>YIR@
z%A)KH4|Wqi)4oA#zK-|w1lD=I67xdTXLIaZD;;c2GPR$#{h6;=&16|foC+d66isB`
z><30hM$G6)Ga)iC5*mq6w2w)fTq!2&_6w2w#xU~p$;+qdiQ2$v-sNd?rSNnMDb{#j
qZMyBlb0N;tMsVJyrm%T)rH6-=fDLCy=Kk6#N<b%0;6(J+^W!%OD9S|u

literal 0
HcmV?d00001

diff --git a/polls/__pycache__/views.cpython-38.pyc b/polls/__pycache__/views.cpython-38.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..a624244d8ea4957e095fcadf42ad7ee988ab42f2
GIT binary patch
literal 3297
zcma)8OOG5y60Xd8_iK6{HV>g?c*wXx7z@nBLMsI9YC)(O*&w0PpjLUZY*$ZpS39%D
z_Kd1e!);}WpD;f17dZ1P>cEA|@)ywZ_#&#hr+Yw%ZdGPvW@Kc<m+{Ciy4{wApZ?#K
z(SJ8A>qi=_{v-zP<1=5QQI-;!H4%}R$Vdtr%gmlQkuz~4m&bPIP5j6Q?I<@3CSep#
zT2X7#j@p>>l>fCAbyT22^j+0bZS+0WQC;*Ks;4&4_f=nQqTf_oY8(BQ+EJI#Z>!6<
zt-&)tK@)2rtImIlVs<MrvwUijYG-wHD^aOV4hnE>-b;#6erJr)DA%JK*KbswPNpi+
z15x=pd6;OE{3J-EUAdo`{7zi?pC?&zH=kDSzb0{-9nk9H=Y#O@eTdI|iKei|;!HlZ
z=Hi|;m!<f~`s(`JF6^-wJEg6}6ESxRcV*<3^2{sk(kb10_ERCO2U|*(G8J>L@JmbC
zrFUw>P-pn9sN9@2>Kx?LB8CZBYKouxvpmbpTPdt~eC>WQ$p(QApi1S}hMLNbvrLCH
z<=suQBGH<zx$@%K47O_*gMm-xKR8NE5w-Xf7OuNk(;eatiW-LF%1a1`r1D9P<Z<z>
zrJn)E&+mM6bN_a6r0&Eg@&4?%xSvn=bWT{C{TT+y2YG(D&)V)kOp{0E+U&S;S#MI#
z^wC(NB^?on9{yW05c)aH9gyEGex$99k0Fmh5aeS(&EQIg8UQN!9KZwIcH!{)`3x?g
zv`>YShf?1H?JQ`zil>&a2>4U609~d^)1B)!ng&~q=&<xAHKcltr=2C!%2R*|5R={m
zS8t=M<m`|!)H}p`i5dc|Zk{EMZoTWn`d*2{5a<@6034nLBKk#)*PPG61bvLeryxpe
zY@Gpzr(!M|T7m{P=1L*SnNH<xtCZ#jj~p5SFK6tQ0*JX!B+vpM+wKi3C!M586-?uk
zN2xi?Pc|n<CN(F!vs}doyR>+6X>Dr3Igol6`skO?47|$O`|S4Tm5tbASlBxm!OA<(
zNn9iYrv}QI#*-xS&5>pzoF<R<5Rv)xB3>=5G+_M$XEd(U5gj;BOW>1zsjpyV&2`9a
z$bA^Fw?X`g>o~RR06zE3Q;10AJVA0>x`aE_&toThL=->`P6{xXgT&>~_@k3hyy;h|
zd6}A5s9_JWYr}&&<Q9H%!8?LjDL&>6>@$>a$T40JdH`z8LJE|nh1W2sEo|}+hX@76
z-?wg$;&x%3-=qN8$6n7tz*bSdsl(xdeUk0dS84rEtYY!kv1mwwB`%BBZ=Td-=bBxA
z8T4ckoZK4QXAa%i+-_(GH0~4bZ6DhDCbFy?A>WR@(!ux><Xk!O5cEC=eb6}m+6{+%
zF(1R#qb`%fCKv|cxf@@!d>87o?^lkAQBqcNL5&3Y%6Wub1g4F8RW#oHE;!8=8ViX4
z{tfT;_(MW?6SHdxfwB~N0Q)y(Q-r)YwDTT%>o7z@lf$aM2b4Q^7VCI&@$l``j2^~W
zszxXV`j~m%hbTjWEurbM)(#~nSeC%=p#s2PW+7w~af+hW%yBltoLrgX3&R{T@{*4)
z4s*!N2t5?XQ(+#X2M_ny&pl+Lcj}8nS@q~D=WY=+lvjie<zqLv^>?K|ZlPAVs0@A~
zmB%N@(r-?JWc>s4NaZ&?!37>@@r}?|OBa%C6@tq}u@6cg#s11XEM4?3%v)txw#My4
z30|iR&N^jC<^3D+z<KchGQjC<7gmeXgCs|_AjyNIHcPq+NghkW&a%@;8kX%9Nkd5c
zciEo%*wy7-Z_h)r9`ZufCV7O)a^#j>+Fg2!#|HM7s#A9H+~^fuxJkF{@pGd$jDou;
z&FuLdq85%Hg*4)H6t#(Lo<{=_ZBR)VjZ%6S#Oc(W^x2cRQtaiXxVa0a?M0DTW!$M5
z7fVa#KIhXFP6*g)ve3#bm*)Dd(t|q=dgo~tZm!d5!G2p;AI`;`x+p~IOm?2XI5a8X
z>Sxgg=dUOr%SfxJv#MhhvVK(FqIRPe4eA<C)jr}U+i}#c4WSfrT)zcgqt))hmU`iJ
zI+veZmx;QNFd6M8FK~z}Fj>e6!P*xH?>8yEU#0E+BAr0CkS|(x%@g2BMf^0|L7fDJ
zzAv1$@fOC5N7xQHG}X%CV5e%UaXh`3<CR&=G$jOWqrnrso;LS$T^t-0M$@x|0bFi5
z(wWheCn|4}<F#Yz^tpUJ)ptX09Io43+PDsInyasm)K~$9;o;{~@E&9yWywD&0~*4v
U52HGA#|b(?7<2;{|8`*i4!<1Eg8%>k

literal 0
HcmV?d00001

diff --git a/polls/admin.py b/polls/admin.py
new file mode 100644
index 0000000..8c38f3f
--- /dev/null
+++ b/polls/admin.py
@@ -0,0 +1,3 @@
+from django.contrib import admin
+
+# Register your models here.
diff --git a/polls/apps.py b/polls/apps.py
new file mode 100644
index 0000000..d0f109e
--- /dev/null
+++ b/polls/apps.py
@@ -0,0 +1,5 @@
+from django.apps import AppConfig
+
+
+class PollsConfig(AppConfig):
+    name = 'polls'
diff --git a/polls/migrations/0001_initial.py b/polls/migrations/0001_initial.py
new file mode 100644
index 0000000..b4eefcc
--- /dev/null
+++ b/polls/migrations/0001_initial.py
@@ -0,0 +1,39 @@
+# Generated by Django 3.0.8 on 2020-07-26 19:33
+
+from django.db import migrations, models
+import django.db.models.deletion
+
+
+class Migration(migrations.Migration):
+
+    initial = True
+
+    dependencies = [
+    ]
+
+    operations = [
+        migrations.CreateModel(
+            name='Osoba',
+            fields=[
+                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('imie', models.CharField(max_length=50)),
+                ('nazwisko', models.CharField(max_length=50)),
+            ],
+        ),
+        migrations.CreateModel(
+            name='Telefon',
+            fields=[
+                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('telefon', models.CharField(max_length=50)),
+                ('osoba', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='polls.Osoba')),
+            ],
+        ),
+        migrations.CreateModel(
+            name='Email',
+            fields=[
+                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('email', models.EmailField(max_length=254)),
+                ('osoba', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='polls.Osoba')),
+            ],
+        ),
+    ]
diff --git a/polls/migrations/__init__.py b/polls/migrations/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/polls/migrations/__pycache__/0001_initial.cpython-38.pyc b/polls/migrations/__pycache__/0001_initial.cpython-38.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..63e9d05239d2580d707608b6dd8dd6f02f7f1d48
GIT binary patch
literal 1026
zcmah|O>fgc5VhCq*v?m5C<l<ZaS2FK;D``vNn3<a3sTF)iex#NNxH7>4YmWMS2!W%
z7w`-COLK)wPu!8H7&|GA1QKiQdfs?vJn!x7n^voC@c2x3gD<vWd@I5FkPLQs=3QRE
z05dic(>D|03$w%`wtV^A01M<N10<S}{n7Gm5XVNxzTg<6BdDIJNfs7Lr#aOU4H)M~
zqw?GOXfoL0nSbX64c`RA7hw9<#PB8BQ4IuG=tM4<{7A5&wvb~14*NWC!CRP&>g#A?
zL1Q7R*ycZDTkE@_&8W^C8c{QHqE^&~4cJ^*W3iTJ>z{dUaO4KuT-ETOJQK^`gl*R6
z7I}wP!km!(D%Zo1gn|PSFZMc;n&GU_!6?J9K%mAnQ%RW3gEO3ymt&^FSe+v^-(fb?
zIR<H%AW4-dym-VCc1+ei{1C*LPKr}<)A0Pg%Fi^Phpe{N#tLJ|$vMFo$2ujaSQ)l1
zOF3^$bsXp2s;-VjE`ln;VT|PIG~h$T0!b8_?ENHEG1*wYE-v}sN1ZKlgQ}t+pn4GS
zq0eGuyBP#;XJK3xz{pXlDwqc~0jHP(rXz)UCO8E(`W5lRvRyK(^mx0h$3a;%dHvHc
zTblI)ouQhfFIkovL}5D7Bw$ExRU!8rIsM(^{_fsB)vH2RVS0+Ip8RTL_c?#H{M_Gr
zJUA|9!2H9(bY7h5^mV2q92NOs$^f5feKx3+8C<vZpx5g?3|4Hq(|K0j8;57!<HZ$H
zNGVMrw#~NL{v|G@dxh@&jeb<oof>&dI$ao6k}OrY{m0o|UZw68(d=HyqWtqUpQZJH
TedIn_p2E{o%)H#TX}Z>Lll>zU

literal 0
HcmV?d00001

diff --git a/polls/migrations/__pycache__/__init__.cpython-38.pyc b/polls/migrations/__pycache__/__init__.cpython-38.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..e2df43871d50354bfe61d08c36af9b9852bce646
GIT binary patch
literal 156
zcmWIL<>g`kg2+WO@gVv!h(HF6K#l_t7qb9~6oz01O-8?!3`HPe1o6w!#VRJaq%<Wd
zu_`g9pt2+*KQEvtKPxr4q&TJk$Vqj|&(Dr2$j`|sj>*kTFG?)Q%+D*1iI30B%PfhH
Y*DI*J#bJ}1pHiBWY6mj<GY~TX03~K7@Bjb+

literal 0
HcmV?d00001

diff --git a/polls/models.py b/polls/models.py
new file mode 100644
index 0000000..21d5388
--- /dev/null
+++ b/polls/models.py
@@ -0,0 +1,22 @@
+from django.db import models
+
+# Create your models here.
+
+class Osoba(models.Model):
+    imie = models.CharField(max_length=50)
+
+    nazwisko = models.CharField(max_length=50)
+
+
+class Telefon(models.Model):
+    osoba = models.ForeignKey(Osoba, editable=False,
+                              on_delete=models.CASCADE,)
+
+    telefon = models.CharField(max_length=50)
+
+
+class Email(models.Model):
+    osoba = models.ForeignKey(Osoba, editable=False,
+                              on_delete=models.CASCADE,)
+
+    email = models.EmailField()
\ No newline at end of file
diff --git a/polls/static/polls/style.css b/polls/static/polls/style.css
new file mode 100644
index 0000000..d998c16
--- /dev/null
+++ b/polls/static/polls/style.css
@@ -0,0 +1,19 @@
+
+
+body {
+  margin-top: 5rem;
+}
+
+/*ul {
+  list-style-type: none;
+} */
+
+li a {
+color: green;
+}
+
+
+.xd {
+    background: maroon;
+    color: aqua;
+}
diff --git a/polls/tables.py b/polls/tables.py
new file mode 100644
index 0000000..b557a0a
--- /dev/null
+++ b/polls/tables.py
@@ -0,0 +1,8 @@
+import django_tables2 as tables
+from .models import Osoba
+
+class PersonTable(tables.Table):
+    class Meta:
+        model = Osoba
+        template_name = "django_tables2/bootstrap.html"
+        fields = ("name", )
\ No newline at end of file
diff --git a/polls/tests.py b/polls/tests.py
new file mode 100644
index 0000000..7ce503c
--- /dev/null
+++ b/polls/tests.py
@@ -0,0 +1,3 @@
+from django.test import TestCase
+
+# Create your tests here.
diff --git a/polls/urls.py b/polls/urls.py
new file mode 100644
index 0000000..bbdfd43
--- /dev/null
+++ b/polls/urls.py
@@ -0,0 +1,19 @@
+from django.conf.urls import url
+from django.views.generic import RedirectView, TemplateView
+#
+from . import views
+urlpatterns = [
+    url(r'^$', views.index, name='index'),
+    url(r'^delete_contact/(?P<pk>\d+)/$', views.deleteContact, name='deleteContact'),
+    url(r'^newContact', views.newContact, name='newContact'),
+    url(r'^add_email/(?P<osoba_pk>\d+)$', views.addEmail, name='addEmail'),
+    url(r'^add_phone/(?P<osoba_pk>\d+)$', views.addPhone, name='addPhone'),
+    url(r'^edit_contact/(?P<osoba_pk>\d+)$', views.editContact, name='editContact'),
+    url(r'^find_contact$', views.findContact, name='findContact'),
+    #     # ex: /polls/5/
+    #url(r'^(?P<question_id>[0-9]+)/$', views.detail, name='detail'),
+    # ex: /polls/5/results/
+    #url(r'^(?P<question_id>[0-9]+)/results/$', views.results, name='results'),
+    # ex: /polls/5/vote/
+    #url(r'^(?P<question_id>[0-9]+)/vote/$', views.vote, name='vote'),
+]
\ No newline at end of file
diff --git a/polls/views.py b/polls/views.py
new file mode 100644
index 0000000..83b69f7
--- /dev/null
+++ b/polls/views.py
@@ -0,0 +1,121 @@
+from django.http import HttpResponse, HttpResponseRedirect
+from django.shortcuts import get_object_or_404, render
+from django.urls import reverse
+
+from .models import Osoba, Telefon, Email
+
+
+
+def index(request):
+    osoba_list = Osoba.objects.all()
+
+    contact_list = []
+    for osoba in osoba_list:
+        telefony = Telefon.objects.filter(osoba=osoba)
+        emaile = Email.objects.filter(osoba=osoba)
+        contact_list.append([osoba,telefony,emaile])
+
+    context = {'contact_list': contact_list}
+    return render(request, 'polls/index.html', context)
+
+def deleteContact(request,pk):
+    osoba = Osoba.objects.filter(id=pk)
+    telefony = Telefon.objects.filter(osoba=osoba[0])
+    emaile = Email.objects.filter(osoba=osoba[0])
+
+    if len(telefony)==0 and len(emaile)==0:
+       osoba.delete()
+    return index(request)
+
+def newContact(request):
+    name = request.POST.get('imie')
+    surname = request.POST.get('nazwisko')
+
+    if not name:
+        return index(request, "musisz podac imie")
+    elif not surname:
+        return index(request, "musisz podac nazwisko")
+
+    newPerson = Osoba.objects.create(imie=name,nazwisko=surname)
+
+    return index(request)
+
+def addEmail(request,osoba_pk):
+    osoba = Osoba.objects.filter(id=osoba_pk)
+    Email.objects.create(osoba=osoba[0],email=request.POST.get('newEmail'))
+    return index(request)
+
+def addPhone(request,osoba_pk):
+    Telefon.objects.create(osoba=Osoba.objects.filter(id=osoba_pk)[0],
+                           telefon=request.POST.get('newPhone'))
+    return index(request)
+
+def editContact(request,osoba_pk):
+    osoba = Osoba.objects.filter(id=osoba_pk)[0]
+    imie = request.POST.get("osobaImie")
+    nazwisko = request.POST.get("osobaNazwisko")
+    if osoba.imie != imie:
+        osoba.imie = imie
+    if osoba.nazwisko != nazwisko:
+        osoba.nazwisko = nazwisko
+    osoba.save()
+    return index(request)
+
+def is_valid_queryparam(param):
+    return param != '' and param is not None
+
+def findContact(request):
+    imiePost =  request.POST.get("findImie")
+    print(imiePost)
+    nazwiskoPost = request.POST.get("findNazwisko")
+    print(nazwiskoPost)
+    emailPOST = request.POST.get("findEmail")
+    print(emailPOST)
+    telefonPOST = request.POST.get("findTelefon")
+    print(telefonPOST)
+    if not is_valid_queryparam(telefonPOST) \
+            and not is_valid_queryparam(emailPOST)\
+            and not is_valid_queryparam(nazwiskoPost)\
+            and not is_valid_queryparam(imiePost):
+        return index(request)
+
+    emaile = Email.objects.all()
+    telefony = Telefon.objects.all()
+    osoby = Osoba.objects.all()
+
+
+    if is_valid_queryparam(imiePost):
+        osoby = osoby.filter(imie__icontains=imiePost)
+        print("valid imiePost: ")
+        print(osoby)
+
+    if is_valid_queryparam(nazwiskoPost):
+        osoby = osoby.filter(nazwisko__icontains=nazwiskoPost)
+        print("valid nazwiskoPost: ")
+        print(osoby)
+
+    if is_valid_queryparam(emailPOST):
+        emaile = emaile.filter(email__icontains=emailPOST)
+        email_osoby = []
+        for osoba in osoby:
+            for email in emaile:
+                if osoba == email.osoba:
+                    email_osoby.append(osoba)
+        osoby = email_osoby
+
+    if is_valid_queryparam(telefonPOST):
+        telefony = telefony.filter(telefon__icontains=telefonPOST)
+        telefon_osoby = []
+        for osoba in osoby:
+            for telefon in telefony:
+                if osoba == telefon.osoba:
+                    telefon_osoby.append(osoba)
+        osoby = telefon_osoby
+
+    contact_list = []
+    for osoba in osoby:
+        telefony = Telefon.objects.filter(osoba=osoba)
+        emaile = Email.objects.filter(osoba=osoba)
+        contact_list.append([osoba, telefony, emaile])
+    context = {'contact_list': contact_list}
+    return render(request, 'polls/index.html', context)
\ No newline at end of file
diff --git a/templates/polls/index.html b/templates/polls/index.html
new file mode 100644
index 0000000..67ebcd6
--- /dev/null
+++ b/templates/polls/index.html
@@ -0,0 +1,126 @@
+{% load static %}
+<!doctype html>
+<html lang="en">
+  <head>
+    <meta charset="utf-8">
+    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
+    <meta name="description" content="">
+    <title>Filter Form</title>
+    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
+    <link rel="stylesheet" href="{% static 'polls/style.css' %}" />
+    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.8.1/css/all.css" integrity="sha384-50oBUHEmvpQ+1lW4y57PTFmhCaXp0ML5d60M1M7uH2+nqUivzIebhndOJK28anvf" crossorigin="anonymous">
+  </head>
+  <body>
+
+    <main role="main" class="container">
+
+      <h3>Nowa Osoba</h3>
+      <form method="POST" action="/newContact">
+      {% csrf_token %}
+      {{ form }}
+        <div class="form-row">
+            <div class="form-group col-12">
+                <div class="input-group">
+                    <input class="form-control py-2 border-right-0 border" type="text" name="imie" placeholder="wpisz imie.." />
+                    <input class="form-control py-2 border-right-0 border" type="text" name="nazwisko" placeholder="wpisz nazwisko.." />
+                    <button type="submit" class="btn btn-primary">Dodaj Użytkownika</button>
+                </div>
+            </div>        
+        </div>
+      </form>
+      <form method="POST" action="/find_contact" >
+        {% csrf_token %}
+      {{ form }}
+          <h3>Szukaj Kontaktu</h3>
+        <div class="form-row">
+            <div class="form-group col-12">
+                <div class="input-group">
+                    <input class="form-control py-2 border-right-0 border" type="text" name="findImie" placeholder="wpisz imie.." />
+                    <input class="form-control py-2 border-right-0 border" type="text" name="findNazwisko" placeholder="wpisz nazwisko.." />
+                    <input class="form-control py-2 border-right-0 border" type="text" name="findTelefon" placeholder="wpisz telefon.." />
+                    <input class="form-control py-2 border-right-0 border" type="text" name="findEmail" placeholder="wpisz email.." />
+                    <button type="submit" class="btn btn-primary">Szukaj</button>
+                </div>
+            </div>
+        </div>
+
+      </form>
+
+
+
+        <h3>Twoje Kontakty</h3>
+      <div >
+        <ul>
+          {% for osoba,telefony,emaile in contact_list %}
+            <li>
+            <form action="/edit_contact/{{ osoba.id }}" method="post">
+                {% csrf_token %}
+                {{ form }}
+                <div class="form-row">
+                    <div class="form-group col-md-4">
+                        <input type="text" class="form-control" id="osobaImie" value="{{ osoba.imie }}" name="osobaImie">
+                    </div>
+                    <div class="form-group col-md-4">
+                        <input type="text" class="form-control" id="osobaNazwisko" value="{{ osoba.nazwisko }}" name="osobaNazwisko">
+                    </div>
+                    <div class="form-group col-md-2 col-lg-2">
+                        <input type="submit" class="btn btn-primary" value="Edytuj">
+                    </div>
+                    <div class="form-group col-md-2 col-lg-2">
+                        <a href="/delete_contact/{{ osoba.id }}" class="btn btn-primary">Usuń</a>
+                    </div>
+                </div>
+            </form>
+                    <div class="form-row">
+                        <div class="form-group col-md-2 col-lg-2">
+                            <div class="form-row">
+                                <form class="form-inline" action="/add_email/{{ osoba.id }}" method="post">
+                                    {% csrf_token %}
+                                    {{ form }}
+                                    <input type="text" class="form-control" id="newEmail" placeholder="email.." name="newEmail">
+                                    <input type="submit" class="btn btn-primary" value="Dodaj">
+                                </form>
+                            </div>
+
+                            <ul>
+                                {% for email in emaile %}
+                                <li>{{ email.email }}</li>
+                                {% endfor %}
+                            </ul>
+                        </div>
+                        <div class="form-group col-md-2 col-lg-2">
+
+                        </div>
+
+
+                        <div class="form-group col-md-2 col-lg-2">
+                            <form action="/add_phone/{{ osoba.id }}" method="post">
+                            {% csrf_token %}
+                            {{ form }}
+                            <input type="text" class="form-control" id="newTelefon" placeholder="telefon.." name="newTelefon">
+                            <input type="submit" class="btn btn-primary" value="Dodaj">
+                            </form>
+                            <ul>
+                                {% for telefon in telefony %}
+                                <li>{{ telefon.telefon }}</li>
+                                {% endfor %}
+                            </ul>
+                        </div>
+
+
+                    </div>
+            </li>
+
+          {% endfor %}
+        </ul>
+      </div>
+
+    </main>
+
+<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
+<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
+<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
+
+</body>
+
+</html>
-- 
2.19.1.windows.1

